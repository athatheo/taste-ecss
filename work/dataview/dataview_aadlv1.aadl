--------------------------------------------------------
--! File generated by asn2aadl v2.2-rd1ee87c: DO NOT EDIT !
--------------------------------------------------------
--! MadeInFastMode:False:
--! InputASN1FileChecksum:a3175acb171e2a685149083442918e0f:dataview/dataview-uniq.asn:
--------------------------------------------------------

package DataView

public

DATA AcceptanceErrorOccured
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "THESIS_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "AcceptanceErrorOccured";
    TASTE::Position_In_File => [ line => 36 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END AcceptanceErrorOccured;

DATA IMPLEMENTATION AcceptanceErrorOccured.impl
END AcceptanceErrorOccured.impl;

DATA AcceptanceErrorOccured_Buffer_Max
END AcceptanceErrorOccured_Buffer_Max;

DATA IMPLEMENTATION AcceptanceErrorOccured_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type AcceptanceErrorOccured
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END AcceptanceErrorOccured_Buffer_Max.impl;

DATA AcceptanceErrorOccured_Buffer
END AcceptanceErrorOccured_Buffer;

DATA IMPLEMENTATION AcceptanceErrorOccured_Buffer.impl
    -- Buffer to hold a marshalled data of type AcceptanceErrorOccured
SUBCOMPONENTS
    Buffer : data AcceptanceErrorOccured_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END AcceptanceErrorOccured_Buffer.impl;

DATA EventOccured
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "THESIS_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "EventOccured";
    TASTE::Position_In_File => [ line => 25 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END EventOccured;

DATA IMPLEMENTATION EventOccured.impl
END EventOccured.impl;

DATA EventOccured_Buffer_Max
END EventOccured_Buffer_Max;

DATA IMPLEMENTATION EventOccured_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type EventOccured
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END EventOccured_Buffer_Max.impl;

DATA EventOccured_Buffer
END EventOccured_Buffer;

DATA IMPLEMENTATION EventOccured_Buffer.impl
    -- Buffer to hold a marshalled data of type EventOccured
SUBCOMPONENTS
    Buffer : data EventOccured_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END EventOccured_Buffer.impl;

DATA ExecutionCompletionErrorType
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "THESIS_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "ExecutionCompletionErrorType";
    TASTE::Position_In_File => [ line => 65 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END ExecutionCompletionErrorType;

DATA IMPLEMENTATION ExecutionCompletionErrorType.impl
END ExecutionCompletionErrorType.impl;

DATA ExecutionCompletionErrorType_Buffer_Max
END ExecutionCompletionErrorType_Buffer_Max;

DATA IMPLEMENTATION ExecutionCompletionErrorType_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type ExecutionCompletionErrorType
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END ExecutionCompletionErrorType_Buffer_Max.impl;

DATA ExecutionCompletionErrorType_Buffer
END ExecutionCompletionErrorType_Buffer;

DATA IMPLEMENTATION ExecutionCompletionErrorType_Buffer.impl
    -- Buffer to hold a marshalled data of type ExecutionCompletionErrorType
SUBCOMPONENTS
    Buffer : data ExecutionCompletionErrorType_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END ExecutionCompletionErrorType_Buffer.impl;

DATA ExecutionProgressErrorType
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "THESIS_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "ExecutionProgressErrorType";
    TASTE::Position_In_File => [ line => 61 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END ExecutionProgressErrorType;

DATA IMPLEMENTATION ExecutionProgressErrorType.impl
END ExecutionProgressErrorType.impl;

DATA ExecutionProgressErrorType_Buffer_Max
END ExecutionProgressErrorType_Buffer_Max;

DATA IMPLEMENTATION ExecutionProgressErrorType_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type ExecutionProgressErrorType
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END ExecutionProgressErrorType_Buffer_Max.impl;

DATA ExecutionProgressErrorType_Buffer
END ExecutionProgressErrorType_Buffer;

DATA IMPLEMENTATION ExecutionProgressErrorType_Buffer.impl
    -- Buffer to hold a marshalled data of type ExecutionProgressErrorType
SUBCOMPONENTS
    Buffer : data ExecutionProgressErrorType_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END ExecutionProgressErrorType_Buffer.impl;

DATA ExecutionStartErrorType
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "THESIS_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "ExecutionStartErrorType";
    TASTE::Position_In_File => [ line => 48 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END ExecutionStartErrorType;

DATA IMPLEMENTATION ExecutionStartErrorType.impl
END ExecutionStartErrorType.impl;

DATA ExecutionStartErrorType_Buffer_Max
END ExecutionStartErrorType_Buffer_Max;

DATA IMPLEMENTATION ExecutionStartErrorType_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type ExecutionStartErrorType
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END ExecutionStartErrorType_Buffer_Max.impl;

DATA ExecutionStartErrorType_Buffer
END ExecutionStartErrorType_Buffer;

DATA IMPLEMENTATION ExecutionStartErrorType_Buffer.impl
    -- Buffer to hold a marshalled data of type ExecutionStartErrorType
SUBCOMPONENTS
    Buffer : data ExecutionStartErrorType_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END ExecutionStartErrorType_Buffer.impl;

DATA Message
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "THESIS_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8248; suggested aligned message buffer is...
    Source_Data_Size => 8248 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Message";
    TASTE::Position_In_File => [ line => 13 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END Message;

DATA IMPLEMENTATION Message.impl
END Message.impl;

DATA Message_Buffer_Max
END Message_Buffer_Max;

DATA IMPLEMENTATION Message_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Message
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8248); -- Size of the buffer
    Source_Data_Size => 8248 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Message_Buffer_Max.impl;

DATA Message_Buffer
END Message_Buffer;

DATA IMPLEMENTATION Message_Buffer.impl
    -- Buffer to hold a marshalled data of type Message
SUBCOMPONENTS
    Buffer : data Message_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 8264 Bytes; -- Size of the buffer in bytes
END Message_Buffer.impl;

DATA MyInteger
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "THESIS_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MyInteger";
    TASTE::Position_In_File => [ line => 4 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END MyInteger;

DATA IMPLEMENTATION MyInteger.impl
END MyInteger.impl;

DATA MyInteger_Buffer_Max
END MyInteger_Buffer_Max;

DATA IMPLEMENTATION MyInteger_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MyInteger
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END MyInteger_Buffer_Max.impl;

DATA MyInteger_Buffer
END MyInteger_Buffer;

DATA IMPLEMENTATION MyInteger_Buffer.impl
    -- Buffer to hold a marshalled data of type MyInteger
SUBCOMPONENTS
    Buffer : data MyInteger_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END MyInteger_Buffer.impl;

DATA Packet
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "THESIS_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 800; suggested aligned message buffer is...
    Source_Data_Size => 800 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Packet";
    TASTE::Position_In_File => [ line => 11 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END Packet;

DATA IMPLEMENTATION Packet.impl
END Packet.impl;

DATA Packet_Buffer_Max
END Packet_Buffer_Max;

DATA IMPLEMENTATION Packet_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Packet
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (800); -- Size of the buffer
    Source_Data_Size => 800 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Packet_Buffer_Max.impl;

DATA Packet_Buffer
END Packet_Buffer;

DATA IMPLEMENTATION Packet_Buffer.impl
    -- Buffer to hold a marshalled data of type Packet
SUBCOMPONENTS
    Buffer : data Packet_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 816 Bytes; -- Size of the buffer in bytes
END Packet_Buffer.impl;

DATA RoutingErrorType
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "THESIS_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "RoutingErrorType";
    TASTE::Position_In_File => [ line => 44 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END RoutingErrorType;

DATA IMPLEMENTATION RoutingErrorType.impl
END RoutingErrorType.impl;

DATA RoutingErrorType_Buffer_Max
END RoutingErrorType_Buffer_Max;

DATA IMPLEMENTATION RoutingErrorType_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type RoutingErrorType
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END RoutingErrorType_Buffer_Max.impl;

DATA RoutingErrorType_Buffer
END RoutingErrorType_Buffer;

DATA IMPLEMENTATION RoutingErrorType_Buffer.impl
    -- Buffer to hold a marshalled data of type RoutingErrorType
SUBCOMPONENTS
    Buffer : data RoutingErrorType_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END RoutingErrorType_Buffer.impl;

DATA T_Boolean
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Boolean";
    TASTE::Position_In_File => [ line => 121 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aBOOLEAN;
END T_Boolean;

DATA IMPLEMENTATION T_Boolean.impl
END T_Boolean.impl;

DATA T_Boolean_Buffer_Max
END T_Boolean_Buffer_Max;

DATA IMPLEMENTATION T_Boolean_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Boolean
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_Boolean_Buffer_Max.impl;

DATA T_Boolean_Buffer
END T_Boolean_Buffer;

DATA IMPLEMENTATION T_Boolean_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Boolean
SUBCOMPONENTS
    Buffer : data T_Boolean_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END T_Boolean_Buffer.impl;

DATA T_Int32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int32";
    TASTE::Position_In_File => [ line => 113 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_Int32;

DATA IMPLEMENTATION T_Int32.impl
END T_Int32.impl;

DATA T_Int32_Buffer_Max
END T_Int32_Buffer_Max;

DATA IMPLEMENTATION T_Int32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_Int32_Buffer_Max.impl;

DATA T_Int32_Buffer
END T_Int32_Buffer;

DATA IMPLEMENTATION T_Int32_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int32
SUBCOMPONENTS
    Buffer : data T_Int32_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END T_Int32_Buffer.impl;

DATA T_Int8
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int8";
    TASTE::Position_In_File => [ line => 117 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_Int8;

DATA IMPLEMENTATION T_Int8.impl
END T_Int8.impl;

DATA T_Int8_Buffer_Max
END T_Int8_Buffer_Max;

DATA IMPLEMENTATION T_Int8_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int8
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_Int8_Buffer_Max.impl;

DATA T_Int8_Buffer
END T_Int8_Buffer;

DATA IMPLEMENTATION T_Int8_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int8
SUBCOMPONENTS
    Buffer : data T_Int8_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END T_Int8_Buffer.impl;

DATA T_Null_Record
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 0; suggested aligned message buffer is...
    Source_Data_Size => 0 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Null-Record";
    TASTE::Position_In_File => [ line => 123 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END T_Null_Record;

DATA IMPLEMENTATION T_Null_Record.impl
END T_Null_Record.impl;

DATA T_Null_Record_Buffer_Max
END T_Null_Record_Buffer_Max;

DATA IMPLEMENTATION T_Null_Record_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Null_Record
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (0); -- Size of the buffer
    Source_Data_Size => 0 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_Null_Record_Buffer_Max.impl;

DATA T_Null_Record_Buffer
END T_Null_Record_Buffer;

DATA IMPLEMENTATION T_Null_Record_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Null_Record
SUBCOMPONENTS
    Buffer : data T_Null_Record_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 16 Bytes; -- Size of the buffer in bytes
END T_Null_Record_Buffer.impl;

DATA T_UInt32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt32";
    TASTE::Position_In_File => [ line => 115 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_UInt32;

DATA IMPLEMENTATION T_UInt32.impl
END T_UInt32.impl;

DATA T_UInt32_Buffer_Max
END T_UInt32_Buffer_Max;

DATA IMPLEMENTATION T_UInt32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_UInt32_Buffer_Max.impl;

DATA T_UInt32_Buffer
END T_UInt32_Buffer;

DATA IMPLEMENTATION T_UInt32_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt32
SUBCOMPONENTS
    Buffer : data T_UInt32_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END T_UInt32_Buffer.impl;

DATA T_UInt8
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt8";
    TASTE::Position_In_File => [ line => 119 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_UInt8;

DATA IMPLEMENTATION T_UInt8.impl
END T_UInt8.impl;

DATA T_UInt8_Buffer_Max
END T_UInt8_Buffer_Max;

DATA IMPLEMENTATION T_UInt8_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt8
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_UInt8_Buffer_Max.impl;

DATA T_UInt8_Buffer
END T_UInt8_Buffer;

DATA IMPLEMENTATION T_UInt8_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt8
SUBCOMPONENTS
    Buffer : data T_UInt8_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END T_UInt8_Buffer.impl;

DATA UInt16
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "THESIS_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "UInt16";
    TASTE::Position_In_File => [ line => 9 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END UInt16;

DATA IMPLEMENTATION UInt16.impl
END UInt16.impl;

DATA UInt16_Buffer_Max
END UInt16_Buffer_Max;

DATA IMPLEMENTATION UInt16_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type UInt16
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END UInt16_Buffer_Max.impl;

DATA UInt16_Buffer
END UInt16_Buffer;

DATA IMPLEMENTATION UInt16_Buffer.impl
    -- Buffer to hold a marshalled data of type UInt16
SUBCOMPONENTS
    Buffer : data UInt16_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END UInt16_Buffer.impl;

DATA UInt8
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "THESIS_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "UInt8";
    TASTE::Position_In_File => [ line => 7 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END UInt8;

DATA IMPLEMENTATION UInt8.impl
END UInt8.impl;

DATA UInt8_Buffer_Max
END UInt8_Buffer_Max;

DATA IMPLEMENTATION UInt8_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type UInt8
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END UInt8_Buffer_Max.impl;

DATA UInt8_Buffer
END UInt8_Buffer;

DATA IMPLEMENTATION UInt8_Buffer.impl
    -- Buffer to hold a marshalled data of type UInt8
SUBCOMPONENTS
    Buffer : data UInt8_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END UInt8_Buffer.impl;

SYSTEM Taste_DataView
END    Taste_DataView;

SYSTEM IMPLEMENTATION Taste_DataView.others
SUBCOMPONENTS
   AcceptanceErrorOccured : DATA AcceptanceErrorOccured.impl;
   EventOccured : DATA EventOccured.impl;
   ExecutionCompletionErrorType : DATA ExecutionCompletionErrorType.impl;
   ExecutionProgressErrorType : DATA ExecutionProgressErrorType.impl;
   ExecutionStartErrorType : DATA ExecutionStartErrorType.impl;
   Message : DATA Message.impl;
   MyInteger : DATA MyInteger.impl;
   Packet : DATA Packet.impl;
   RoutingErrorType : DATA RoutingErrorType.impl;
   T_Boolean : DATA T_Boolean.impl;
   T_Int32 : DATA T_Int32.impl;
   T_Int8 : DATA T_Int8.impl;
   T_Null_Record : DATA T_Null_Record.impl;
   T_UInt32 : DATA T_UInt32.impl;
   T_UInt8 : DATA T_UInt8.impl;
   UInt16 : DATA UInt16.impl;
   UInt8 : DATA UInt8.impl;
END Taste_DataView.others;
end DataView;
