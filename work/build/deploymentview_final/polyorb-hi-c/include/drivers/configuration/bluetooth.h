#ifndef GENERATED_ASN1SCC_bluetooth_H
#define GENERATED_ASN1SCC_bluetooth_H
/*
Code automatically generated by asn1scc tool
*/
#include "asn1crt.h"

#ifdef  __cplusplus
extern "C" {
#endif


typedef enum {
    __po_hi_c_d250K = 0,
    __po_hi_c_d1M = 1,
    __po_hi_c_d2M = 2
} __po_hi_c_Datarate_T;

// please use the following macros to avoid breaking code.
#define __po_hi_c_Datarate_T_d250K __po_hi_c_d250K
#define __po_hi_c_Datarate_T_d1M __po_hi_c_d1M
#define __po_hi_c_Datarate_T_d2M __po_hi_c_d2M

void __po_hi_c_Datarate_T_Initialize(__po_hi_c_Datarate_T* pVal);

#define ERR_DATARATE_T		1  /**/
flag __po_hi_c_Datarate_T_IsConstraintValid(const __po_hi_c_Datarate_T* pVal, int* pErrCode);
typedef struct {
    
    byte arr[5];
} __po_hi_c_Address_T;


void __po_hi_c_Address_T_Initialize(__po_hi_c_Address_T* pVal);

#define ERR_ADDRESS_T		8  /**/
flag __po_hi_c_Address_T_IsConstraintValid(const __po_hi_c_Address_T* pVal, int* pErrCode);
/*-- __po_hi_c_bluetooth_conf_t --------------------------------------------*/
typedef asn1SccUint __po_hi_c_bluetooth_conf_t_channel;

typedef struct {
    __po_hi_c_bluetooth_conf_t_channel channel;
    __po_hi_c_Datarate_T datarate;
    __po_hi_c_Address_T address;

    struct {
        unsigned int datarate:1;
        unsigned int address:1;
    } exist;

} __po_hi_c_bluetooth_conf_t;

void __po_hi_c_bluetooth_conf_t_channel_Initialize(__po_hi_c_bluetooth_conf_t_channel* pVal);
void __po_hi_c_bluetooth_conf_t_Initialize(__po_hi_c_bluetooth_conf_t* pVal);

#define ERR_BLUETOOTH_CONF_T		46  /**/
#define ERR_BLUETOOTH_CONF_T_CHANNEL		15  /**/
#define ERR_BLUETOOTH_CONF_T_DATARATE_2		29  /**/
#define ERR_BLUETOOTH_CONF_T_ADDRESS_2		41  /**/
flag __po_hi_c_bluetooth_conf_t_IsConstraintValid(const __po_hi_c_bluetooth_conf_t* pVal, int* pErrCode);

extern const __po_hi_c_bluetooth_conf_t crazyflie_default; 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

 


#ifdef  __cplusplus
}

#endif

#endif
